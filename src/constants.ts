import { getArcWidth, getChapterWidth, getVolumeWidth } from './helpers';
import { SettingsValues } from './providers/SettingsProvider';
import { Flatten, Length, Tuple } from './types';
import { isMobileDevice, map, range, sum } from './util';

export const VOLUME_HEIGHT = 1356;
export const CHAPTER_HEIGHT = 100;
export const ARC_HEIGHT = VOLUME_HEIGHT * 2;
export const TIMELINE_HEIGHT = 200;
const MAX_HEIGHT =
    ARC_HEIGHT + TIMELINE_HEIGHT + CHAPTER_HEIGHT + VOLUME_HEIGHT;

const COEFFICIENT = MAX_HEIGHT / 100;
export const scale = (n: number) => n / COEFFICIENT;

export const SCROLLER_WIDTH = 1300;
export const HEADERS_WIDTH = 150;

export const LARGE_FONT_SIZE = 500;
export const SMALL_FONT_SIZE = 45;

const CHAPTERS_TOTAL = 395; // 16 + 379
const ARCS_TOTAL = 5;
const VOLUMES_TOTAL = 43; // last = unreleased

export const PAGES_PER_CHAPTER_PER_VOLUME = [
    [90, 72, 57],
    [117, 111],
    [59, 54, 63, 46],
    [48, 47, 43, 43, 41],
    [36, 41, 40, 19, 18, 20, 19, 28],
    [27, 22, 20, 20, 24, 20, 20, 19, 20, 24],
    [24, 22, 23, 23, 21, 21, 22, 19, 20, 22],
    [22, 23, 19, 21, 22, 22, 22, 22, 21, 20],
    [21, 22, 20, 19, 21, 21, 22, 20, 22, 19, 20],
    [20, 22, 21, 21, 19, 18, 20, 18, 19, 23, 21],
    [20, 19, 19, 18, 20, 21, 21, 22, 20, 21, 23],
    [19, 23, 21, 22, 18, 21, 20, 22, 19, 20],
    [19, 23, 21, 17, 19, 19, 23, 21, 26, 18, 16, 18],
    [21, 23, 23, 30, 17, 22, 19, 20],
    [21, 19, 21, 19, 19, 21, 19, 20, 18, 19, 20],
    [19, 17, 19, 19, 20, 20, 22, 22, 19, 20, 20],
    [21, 19, 18, 22, 19, 19, 21, 19, 22, 21, 22],
    [15, 18, 18, 21, 19, 20, 20, 24, 19, 23, 21],
    [21, 22, 20, 22, 23, 18, 20, 19, 19, 18, 18],
    [18, 18, 19, 20, 19, 17, 19, 18, 20, 20, 19],
    [20, 20, 20, 20, 16, 21, 20, 13, 18, 16, 23],
    [22, 23, 21, 17, 20, 22, 17, 21, 18, 20],
    [17, 19, 23, 20, 18, 20, 18, 20, 18, 19],
    [21, 17, 18, 18, 17, 20, 21, 21, 21, 16],
    [19, 19, 21, 19, 19, 20, 20, 23, 19, 18],
    [19, 19, 21, 21, 19, 18, 19, 20, 24, 20],
    [19, 19, 21, 19, 21, 18, 19, 18, 19, 19],
    [22, 24, 24, 21, 20, 19, 20, 21, 18, 21],
    [20, 20, 22, 18, 20, 20, 22, 22, 18, 17],
    [20, 20, 19, 17, 19, 18, 18, 20, 18, 19],
    [17, 17, 16, 18, 20, 20, 21, 18, 16, 17],
    [19, 19, 12, 18, 16, 18, 19, 19, 18, 19],
    [19, 18, 15, 19, 20, 17, 20, 20, 20, 20],
    [16, 15, 16, 16, 18, 15, 17, 17, 14, 14],
    [12, 18, 19, 16, 20, 21, 20, 18, 19],
    [22, 22, 17, 15, 15, 20, 19, 17, 18],
    [19, 17, 21, 22, 23, 22, 23, 20, 16],
    [17, 15, 21, 17, 17, 20, 21, 20, 18],
    [20, 21, 18, 17, 17, 19, 18, 17],
    [18, 16, 16, 19, 19, 19, 21],
    [21, 23, 20, 19, 14, 18, 24],
    [19, 15, 15, 19, 17, 16, 17, 21, 21],
    [21, 21, 19, 24, 22, 22],
] as const;

const _ASSERT_LEGNTHS: [
    Length<typeof PAGES_PER_CHAPTER_PER_VOLUME>,
    Length<typeof PAGES_PER_CHAPTER_FLAT>,
    Length<typeof CHAPTER_PICTURES>,
    Length<typeof ARC_IMAGES>,
    Length<typeof ARC_NAMES>,
    Length<typeof VOLUME_COVERS>,
    Length<typeof CHAPTER_DATES>,
    Length<typeof CHAPTER_NAMES>,
    Length<typeof VOLUME_TITLES>
] = [
    VOLUMES_TOTAL,
    CHAPTERS_TOTAL,
    CHAPTERS_TOTAL,
    ARCS_TOTAL,
    ARCS_TOTAL,
    VOLUMES_TOTAL,
    CHAPTERS_TOTAL,
    CHAPTERS_TOTAL,
    VOLUMES_TOTAL,
] as const;

void _ASSERT_LEGNTHS; // to ignore error

export const PAGES_PER_CHAPTER_FLAT =
    PAGES_PER_CHAPTER_PER_VOLUME.flat() as Flatten<
        typeof PAGES_PER_CHAPTER_PER_VOLUME
    >;

export const CHAPTERS_PER_VOLUME = map(
    PAGES_PER_CHAPTER_PER_VOLUME,
    volume => volume.length
);

export const PAGES_PER_VOLUME = map(PAGES_PER_CHAPTER_PER_VOLUME, volume =>
    sum(volume)
);

export const CHAPTER_PICTURES = map(range(0, CHAPTERS_TOTAL), () => null);

export const CHAPTER_PICTURES_FLAT = CHAPTER_PICTURES;

export const CHAPTERS_PER_ARC: [number, number][] = [
    [1, 8],
    [9, 16 + 94],
    [16 + 95, 16 + 176],
    [16 + 177, 16 + 307],
    [16 + 308, CHAPTERS_TOTAL],
];

export const ARC_IMAGES = [
    'V3-Cover_Art-Manga',
    'V5-Cover_Art-Manga',
    'V18-Cover_Art-Manga',
    'V34-Cover_Art-Manga',
    'V38-Guts-Manga',
] as const;

export const CHAPTER_NAMES = [
    'Black Swordsman',
    'The Brand',
    'Guardian Angels of Desire (1)',
    'Guardian Angels of Desire (2)',
    'Guardian Angels of Desire (3)',
    'Guardian Angels of Desire (4)',
    'Guardian Angels of Desire (5)',
    'Guardian Angels of Desire (6)',
    'Golden Age (1)',
    'Golden Age (2)',
    'Golden Age (3)',
    'Golden Age (4)',
    'Golden Age (5)',
    'Golden Age (6)',
    'Golden Age (7)',
    'Golden Age (8)',
    'Sword Wind',
    'Nosferatu Zodd (1)',
    'Nosferatu Zodd (2)',
    'Nosferatu Zodd (3)',
    'Nosferatu Zodd (4)',
    'Sword Master (1)',
    'Sword Master (2)',
    'Assassin (1)',
    'Assassin (2)',
    'Assassin (3)',
    'Assassin (4)',
    'Precious Thing',
    'Departure for the Front',
    'Battle',
    'Casca (1)',
    'Casca (2)',
    'Casca (3)',
    'Ready to Die (1)',
    'Ready to Die (2)',
    'Ready to Die (3)',
    'Returning Alive',
    'Bonfire of Dreams',
    'Battle to Capture Doldrey (1)',
    'Battle to Capture Doldrey (2)',
    'Battle to Capture Doldrey (3)',
    'Battle to Capture Doldrey (4)',
    'Battle to Capture Doldrey (5)',
    'Battle to Capture Doldrey (6)',
    'Triumphant Return',
    'Moment of Glory',
    'Tombstone of Flames (1)',
    'Tombstone of Flames (2)',
    'Snowy Evening...',
    'Morning of Departure (1)',
    'Morning of Departure (2)',
    'Morning of Departure (3)',
    'Skull Knight',
    'Beginning of the Endless Night',
    'Fallen Falcon',
    'Demise of a Dream',
    'Tournament',
    'Fugitives',
    'Fighter',
    'Comrades in Arms',
    'Confession',
    'Wound (1)',
    'Wound (2)',
    'Sparks from a Sword Tip',
    'Infiltration of Wyndham (1)',
    'Infiltration of Wyndham (2)',
    'The Eve (1)',
    'The Eve (2)',
    'Thousand-Year Fiefdom',
    'Reunion in the Abyss',
    'A Way Through',
    'Bakiraka (1)',
    'Bakiraka (2)',
    'Flower of the Royal Palace of Stone',
    'Demon Dog (1)',
    'Demon Dog (2)',
    'Demon Dog (3)',
    'Demon Dog (4)',
    'Roar of the Mad Beast',
    'Forest of Atrocity',
    'Mortal Combat (1)',
    'Mortal Combat (2)',
    'Armor on the Chest',
    'One Who Comes by Flight...',
    'The Immortal, Again',
    'Requiem of the Wind',
    'Warriors of Twilight',
    'Boy in the Back Alley',
    'Eclipse',
    'Promised Time',
    'Advent',
    'All the Inhuman Monsters',
    'The Castle',
    'Parting',
    'Feast',
    'Storm of Death (1)',
    'Storm of Death (2)',
    'God of the Abyss (1)',
    'God of the Abyss (2)', // This episode was intentionally excluded from volume format at the request of Kentarou Miura.[1]
    'Fresh Blood',
    'Quickening',
    'Birth',
    'Afterglow of the Right Eye',
    'Escape',
    'Awakening to a Nightmare',
    'Sprint',
    'Vow of Retaliation',
    'Demon Child',
    'Armament',
    'One Who Hunts Dragons',
    'Black Swordsman, Again',
    'Elves of Misty Valley',
    'Jill',
    'Coming By Flight',
    'Evil Insect',
    'Queen',
    "Will-o'-the-Wisp",
    'Red-Eyed Peekaf',
    'Girl I Remember',
    'World of the Winged Ones',
    'Guardian (1)',
    'Guardian (2)',
    'Pursuers',
    'Misty Valley (1)',
    'Misty Valley (2)',
    'Cocoons',
    'Monster',
    'Flying Demon',
    'Bloody Night Sky',
    'Between Man and Demon',
    'Firefly',
    'Road Home',
    'Elf of the Blue Sky',
    'Beast of Darkness',
    'Holy Iron Chain Knights (1)',
    'Holy Iron Chain Knights (2)',
    'Hollow Idol',
    'The Unseen',
    'Night of Miracles',
    'Recurring',
    'Morning of Truth',
    'Revelation (1)',
    'Revelation (2)',
    'Revelation (3)',
    'Cracks in the Blade',
    'Feeble Flame',
    'To the Holy Ground (1)',
    'To the Holy Ground (2)',
    'Kushan Scouts (1)',
    'Kushan Scouts (2)',
    'Tower of Shadows (1)',
    'Tower of Shadows (2)',
    'Children of the Shadows',
    'Zealot',
    'Bowels of the Holy Ground',
    'Witch',
    'Spirit Road (1)',
    'Spirit Road (2)',
    'Pillar of Flames',
    'Black Swordsman on the Holy Ground',
    'Straying',
    'Ambitious Boy',
    "Monsters' Cave",
    'Reunion',
    'Ambush',
    'Cliff',
    'Prisoners',
    'Iron Maiden',
    'Blood Flow of the Dead (1)',
    'Blood Flow of the Dead (2)',
    "Spider's Thread",
    'Those Dancing at the Top, Those Crawling at the Bottom',
    "Hell's Angels",
    'Unknown One at the Bottom of the Deep',
    'The Frightened',
    'Omen',
    'Martyrdom',
    'Collapse',
    'Shadow of Idea (1)',
    'Shadow of Idea (2)',
    'Shadow of Idea (3)',
    'Jumping Fish',
    'Monstrous Priest (1)',
    'Monstrous Priest (2)',
    'One Who Clings, One Who Struggles',
    'Tsunami of Darkness (1)',
    'Tsunami of Darkness (2)',
    'Resonance',
    'Falling Sky',
    'Dawn',
    'Arrival',
    'Determination and Departure',
    'Ruptured World',
    'Reunion on the Hill of Swords',
    'Beast Swordsman vs Black Swordsman',
    'Unchanged',
    'Prologue to the War Chronicle',
    'Onslaught of the Kushans',
    'War Cry of the Wind (1)',
    'War Cry of the Wind (2)',
    'Snow, Flames, and ... (1)',
    'Snow, Flames, and ... (2)',
    'Winter Journey (1)',
    'Winter Journey (2)',
    'Overflowing Time',
    'Fangs of Ego',
    'Reunion in the Wilderness',
    'War Demons',
    'Flag of the Flying Sword',
    'Wings of Light and Darkness',
    'Night of Falling Stars',
    'Like a Baby',
    'Trolls',
    'Witch',
    'Mansion of the Spirit Tree (1)',
    'Mansion of the Spirit Tree (2)',
    'Astral World',
    'Magic Stone',
    'Elementals',
    'Enoch Village',
    'Desires and Memories',
    'Troll Invasion',
    'Magic Sword',
    'Mirror of Sins',
    'Magic',
    'Arcana of Invocation',
    'Evil Horde (1)',
    'Evil Horde (2)',
    'Torrent',
    'Shaman',
    'Qliphoth',
    'Corruption',
    'Retribution',
    'Salvation',
    'Vicinity of Hell',
    'Whore Princess of the Uterine Sea',
    'Companions',
    'Claw Marks',
    'Flames (1)',
    'Flames (2)',
    'Berserker Armor (1)',
    'Berserker Armor (2)',
    'Fire Dragon',
    'Depths of Hellfire',
    'Departure of Flames',
    'Demon Castle',
    'Dread Emperor',
    'Daka',
    'Demon Knight',
    'Demon God',
    'Sleeping Princess Awakens',
    'Roar of the Sea',
    'Proclaimed Omen',
    'Boy in the Moonlight',
    'Familiars',
    'Mysterious Fog',
    'Makara',
    'Roar of the Sea',
    'Jñānin',
    'Garrison',
    'City of People',
    'The Kite and the Owl on the Pier',
    'Bloodshed',
    'Warrior',
    'Meager Supper',
    'Homing',
    'Vandimion',
    'In the Garden',
    'White Lily in the Field',
    'Mother',
    'Ball',
    'Colonnade Chamber',
    'Duel',
    'Suzerain of the Religious Domain',
    'Enchanted Tiger',
    'Intrusion',
    'Rusty Birdcage',
    'Declaration of War',
    'Invasion of the Demon Beasts',
    'Divine Revelation',
    'City of the Demon Beasts (1)',
    'City of the Demon Beasts (2)',
    'Blazing Bay',
    'Blaze Rod',
    'Sword Beast',
    'Wizard General',
    'Eastern Magic',
    'Wind Coiler',
    'Bursting Flames',
    'Thunder Emperor',
    'Attack of the Demon Army',
    'Cloud Cluster',
    'Human Bullet',
    'Setting Sail',
    'Great Invasion (1)',
    'Great Invasion (2)',
    'Advance by Flight',
    'Torn Battlefield',
    'Gust of Wind',
    'Midland Regular Army',
    'Hero',
    'On Board',
    'Bubbles of Futility',
    'Sea Battle (1)',
    'Sea Battle (2)',
    'Howl from the Darkness',
    'Precognitive Dream',
    'Fog of Death',
    'Silent Darkness',
    'Exodus',
    'End God',
    'Roaring Heavens',
    'Giant God of Blindness',
    'Unleash Evil',
    'Inhuman Battlefield',
    'Medium of the Falcon',
    'Chaos',
    'Soaring',
    'Backlighting',
    'Fissure',
    'Creation',
    'Fantasia',
    'Falconia',
    'Ghost Ship (1)',
    'Ghost Ship (2)',
    'Ghost Ship (3)',
    'Solitary Island',
    'Girl of the Roaring Shallows',
    'Denizens of the Sinister Sea',
    'Human Tentacles',
    'Tentacled Ship',
    'Full Moon (1)',
    'Full Moon (2)',
    'Beast Warrior',
    'Sea God (1)',
    'Sea God (2)',
    'Sea God (3)',
    'Booming Heart',
    'Call from the Deep',
    'Merrow (1)',
    'Merrow (2)',
    'Siren',
    'Surfacing',
    'Shooting Star',
    'Spring Flower of Days Long Passed (1)',
    'Spring Flower of Days Long Passed (2)',
    'Spring Flower of Days Long Passed (3)',
    'Covered Wagon',
    'Paradise',
    'Capital City of Humanity',
    'Divine Right of Kings',
    'Pandemonium',
    'Bridge of Parting',
    'Twilight Assassin',
    'Capital City in the Moonlight',
    'Night Battle',
    'Soaring Escape',
    'Landing',
    'Blazing Puppet',
    'Village of Witches',
    'Great Gurus',
    'Elfhelm',
    'Flower Storm Monarch',
    'Gloomy Wasteland',
    'Corridor of Dreams',
    'Fragments of Memories',
    'Forest of Corpses and Thorny Cedars',
    'Main Cause',
    'Final Fragment',
    'Awakening',
    'Beneath Sun-Dappled Trees',
    'Jötunn',
    'Triumphant Return at Dawn',
    'Dawn of an Empire',
    'Barrier',
    'Cherry Orchard',
    'Ravine',
    'Vision of Death',
    'Leaping Monkey',
    'Teardrop of Morning Dew',
    'Lull of the Waning Moon',
    'Eye of the Maelstrom',
    'Vanishing Cherry Blossoms',
    'Devourers',
    'Fading Isle',
    'Refugees on the West Sea',
    'A Dying Light in the Pitch Black Night',
    'The Red Raven Sleeps in the Birdcage',
    'Rusty Iron Rings That Bind',
    'Is the Sleeping Dark Beast Just Standing Quietly?',
    'Morning After a Steady Foggy Night',
    "Water's Wavering Surface and War's Shadow",
    'A Viper in the Bosom',
    'Uninvited Assassin',
    'Those Who Dance Through the Depths of Hell',
] as const;

export const ARC_NAMES = [
    'Black Swordsman',
    'Golden Age',
    'Convitcion',
    'Millenium Falcon',
    'Fantasia',
] as const;

export const VOLUME_COVERS = [
    ...map(range(1, 41), n => `V${n}-Cover-Manga` as const),
    ...map(range(41, VOLUMES_TOTAL), n => `Manga_V${n}_Cover` as const),
    null,
] as const;

export const CHAPTER_DATES = map(
    [
        '1 October 1989',
        '1 January 1990',
        '1 September 1990',
        '1 November 1990',
        '1 January 1991',
        '1 March 1991',
        '1 April 1991',
        '1 May 1991',
        '1 August 1991',
        '1 September 1991',
        '1 October 1991',
        '1 November 1991',
        '1 December 1991',
        '1 January 1992',
        '1 February 1992',
        '1 March 1992',
        '9 October 1992',
        '23 October 1992',
        '13 November 1992',
        '27 November 1992',
        '11 December 1992',
        '25 December 1992',
        '8 January 1993',
        '22 January 1993',
        '12 February 1993',
        '12 March 1993',
        '26 March 1993',
        '9 April 1993',
        '23 April 1993',
        '14 May 1993',
        '28 May 1993',
        '11 June 1993',
        '25 June 1993',
        '9 July 1993',
        '23 July 1993',
        '13 August 1993',
        '27 August 1993',
        '10 September 1993',
        '8 October 1993',
        '22 October 1993',
        '12 November 1993',
        '26 November 1993',
        '10 December 1993',
        '24 December 1993',
        '28 January 1994',
        '11 February 1994',
        '25 February 1994',
        '11 March 1994',
        '25 March 1994',
        '8 April 1994',
        '22 April 1994',
        '13 May 1994',
        '10 June 1994',
        '24 June 1994',
        '8 July 1994',
        '22 July 1994',
        '12 August 1994',
        '26 August 1994',
        '9 September 1994',
        '23 September 1994',
        '14 October 1994',
        '28 October 1994',
        '11 November 1994',
        '9 December 1994',
        '23 December 1994',
        '13 January 1995',
        '27 January 1995',
        '10 February 1995',
        '24 February 1995',
        '10 March 1995',
        '24 March 1995',
        '14 April 1995',
        '28 April 1995',
        '12 May 1995',
        '9 June 1995',
        '23 June 1995',
        '14 July 1995',
        '28 July 1995',
        '11 August 1995',
        '25 August 1995',
        '8 September 1995',
        '22 September 1995',
        '27 October 1995',
        '10 November 1995',
        '24 November 1995',
        '8 December 1995',
        '22 December 1995',
        '12 January 1996',
        '9 February 1996',
        '23 February 1996',
        '8 March 1996',
        '22 March 1996',
        '12 April 1996',
        '26 April 1996',
        '10 May 1996',
        '24 May 1996',
        '14 June 1996',
        '28 June 1996',
        '12 July 1996',
        '26 July 1996',
        '9 August 1996',
        '23 August 1996',
        '13 September 1996',
        '27 September 1996',
        '11 October 1996',
        '25 October 1996',
        '8 November 1996',
        '22 November 1996',
        '13 December 1996',
        '27 December 1996',
        '28 February 1997',
        '14 March 1997',
        '28 March 1997',
        '11 April 1997',
        '9 May 1997',
        '23 May 1997',
        '13 June 1997',
        '27 June 1997',
        '11 July 1997',
        '25 July 1997',
        '22 August 1997',
        '12 September 1997',
        '26 September 1997',
        '10 October 1997',
        '24 October 1997',
        '14 November 1997',
        '28 November 1997',
        '26 December 1997',
        '9 January 1998',
        '23 January 1998',
        '13 February 1998',
        '27 February 1998',
        '13 March 1998',
        '27 March 1998',
        '10 April 1998',
        '24 April 1998',
        '8 May 1998',
        '12 June 1998',
        '26 June 1998',
        '24 July 1998',
        '14 August 1998',
        '28 August 1998',
        '11 September 1998',
        '25 September 1998',
        '9 October 1998',
        '23 October 1998',
        '13 November 1998',
        '27 November 1998',
        '25 December 1998',
        '8 January 1999',
        '22 January 1999',
        '12 February 1999',
        '12 March 1999',
        '26 March 1999',
        '9 April 1999',
        '23 April 1999',
        '14 May 1999',
        '28 May 1999',
        '25 June 1999',
        '9 July 1999',
        '23 July 1999',
        '13 August 1999',
        '27 August 1999',
        '10 September 1999',
        '8 October 1999',
        '22 October 1999',
        '12 November 1999',
        '10 December 1999',
        '24 December 1999',
        '14 January 2000',
        '28 January 2000',
        '11 February 2000',
        '25 February 2000',
        '24 March 2000',
        '14 April 2000',
        '28 April 2000',
        '12 May 2000',
        '26 May 2000',
        '23 June 2000',
        '14 July 2000',
        '28 July 2000',
        '11 August 2000',
        '25 August 2000',
        '22 September 2000',
        '13 October 2000',
        '27 October 2000',
        '10 November 2000',
        '24 November 2000',
        '22 December 2000',
        '12 January 2001',
        '26 January 2001',
        '9 February 2001',
        '13 April 2001',
        '27 April 2001',
        '11 May 2001',
        '25 May 2001',
        '22 June 2001',
        '13 July 2001',
        '27 July 2001',
        '10 August 2001',
        '9 March 2001',
        '23 March 2001',
        '14 September 2001',
        '28 September 2001',
        '12 October 2001',
        '26 October 2001',
        '9 November 2001',
        '14 December 2001',
        '28 December 2001',
        '11 January 2002',
        '25 January 2002',
        '22 February 2002',
        '8 March 2002',
        '22 March 2002',
        '12 April 2002',
        '26 April 2002',
        '10 May 2002',
        '14 June 2002',
        '28 June 2002',
        '12 July 2002',
        '26 July 2002',
        '9 August 2002',
        '13 September 2002',
        '27 September 2002',
        '11 October 2002',
        '25 October 2002',
        '8 November 2002',
        '13 December 2002',
        '27 December 2002',
        '10 January 2003',
        '24 January 2003',
        '14 February 2003',
        '14 March 2003',
        '28 March 2003',
        '11 April 2003',
        '25 April 2003',
        '9 May 2003',
        '13 June 2003',
        '27 June 2003',
        '11 July 2003',
        '25 July 2003',
        '8 August 2003',
        '22 August 2003',
        '12 September 2003',
        '26 September 2003',
        '14 November 2003',
        '28 November 2003',
        '12 December 2003',
        '9 January 2004',
        '23 January 2004',
        '13 February 2004',
        '12 March 2004',
        '26 March 2004',
        '2 April 2004',
        '16 April 2004',
        '7 May 2004',
        '21 May 2004',
        '11 June 2004',
        '25 June 2004',
        '10 September 2004',
        '24 September 2004',
        '8 October 2004',
        '22 October 2004',
        '12 November 2004',
        '26 November 2004',
        '24 June 2005',
        '28 January 2005',
        '11 February 2005',
        '25 February 2005',
        '25 March 2005',
        '8 April 2005',
        '22 April 2005',
        '27 May 2005',
        '10 June 2005',
        '22 July 2005',
        '12 August 2005',
        '26 August 2005',
        '9 September 2005',
        '14 October 2005',
        '28 October 2005',
        '11 November 2005',
        '23 December 2005',
        '13 January 2006',
        '27 January 2006',
        '10 February 2006',
        '10 March 2006',
        '24 March 2006',
        '14 April 2006',
        '28 April 2006',
        '26 May 2006',
        '9 June 2006',
        '23 June 2006',
        '28 July 2006',
        '11 August 2006',
        '8 September 2006',
        '12 January 2007',
        '26 January 2007',
        '9 February 2007',
        '23 February 2007',
        '6 April 2007',
        '27 April 2007',
        '22 June 2007',
        '13 July 2007',
        '27 July 2007',
        '14 September 2007',
        '28 September 2007',
        '9 November 2007',
        '23 November 2007',
        '22 February 2008',
        '14 March 2008',
        '28 March 2008',
        '23 May 2008',
        '13 June 2008',
        '24 October 2008',
        '14 November 2008',
        '28 November 2008',
        '12 December 2008',
        '24 April 2009',
        '8 May 2009',
        '22 May 2009',
        '12 June 2009',
        '26 June 2009',
        '25 September 2009',
        '9 October 2009',
        '23 October 2009',
        '22 January 2010',
        '12 February 2010',
        '26 February 2010',
        '25 June 2010',
        '9 July 2010',
        '23 July 2010',
        '22 October 2010',
        '12 November 2010',
        '26 November 2010',
        '8 April 2011',
        '22 April 2011',
        '13 May 2011',
        '24 June 2011',
        '8 July 2011',
        '22 July 2011',
        '23 September 2011',
        '27 January 2012',
        '10 February 2012',
        '12 October 2012',
        '8 June 2012',
        '22 June 2012',
        '13 July 2012',
        '26 October 2012',
        '28 December 2012',
        '11 April 2014',
        '23 May 2014',
        '8 August 2014',
        '26 September 2014',
        '24 July 2015',
        '28 August 2015',
        '25 September 2015',
        '23 October 2015',
        '27 November 2015',
        '27 November 2015',
        '24 June 2016',
        '22 July 2016',
        '26 August 2016',
        '23 September 2016',
        '24 March 2017',
        '28 April 2017',
        '26 May 2017',
        '23 June 2017',
        '22 December 2017',
        '26 January 2018',
        '23 February 2018',
        '23 March 2018',
        '27 April 2018',
        '24 August 2018',
        '26 April 2019',
        '23 August 2019',
        '24 April 2020',
        '22 July 2020',
        '23 October 2020',
        '22 January 2021',
        '10 September 2021',
        '24 June 2022',
        '24 June 2022',
        '8 July 2022',
        '12 August 2022',
        '9 September 2022',
        '14 October 2022',
        '9 December 2022',
        '28 April 2023',
        '26 May 2023',
        '22 September 2023',
        '10 November 2023',
        '25 April 2024',
        '25 October 2024',
        '8 November 2024',
        '14 February 2025',
    ] as const,
    d => new Date(`${d} GMT+9`) // Tokyo timezone
);

const groupBy = <T>(array: T[], getKey: (el: T) => number) =>
    array.reduce<[[number, T][][], number | null]>(
        ([groups, previous], date, idx) => {
            const key = getKey(date);
            if (key === previous) {
                groups[groups.length - 1]!.push([idx, date]);
            } else {
                groups.push([[idx, date]]);
            }
            return [groups, key];
        },
        [[], null]
    )[0];

export const CHAPTER_DATES_BY_MONTH = groupBy(
    CHAPTER_DATES,
    date => date.getMonth() + 1
);

export const CHAPTER_DATES_BY_YEAR = groupBy(
    CHAPTER_DATES,
    date => date.getFullYear() + 1
);

type Offset = { x: number; y: number };

export const ARC_OFFSETS: Tuple<Offset, typeof ARCS_TOTAL> = [
    { x: 0, y: 0 },
    { x: 0, y: 0 },
    { x: 0, y: 0 },
    { x: 0, y: 0 },
    { x: 0, y: 0 },
];

export const VOLUME_TITLES = [
    ...map(range(1, VOLUMES_TOTAL), n => `Volume ${n}` as const),
    null,
] as const;

type Covers = {
    arc: typeof ARC_IMAGES;
    chapter: typeof CHAPTER_PICTURES_FLAT;
    volume: typeof VOLUME_COVERS;
};

type Titles = {
    arc: typeof ARC_NAMES;
    chapter: typeof CHAPTER_NAMES;
    volume: typeof VOLUME_TITLES;
};

type Offsets = {
    arc: typeof ARC_OFFSETS;
};

export type TimelineInfoType = 'arc' | 'chapter' | 'volume';

export type TimelineInfoMap = {
    [K in TimelineInfoType]: {
        type: K;
        covers: Covers[K];
        fit?: 'contain' | 'cover';
        backgroundColor?: 'black' | 'white';
        scale?: number;
        titles: Titles[K];
        sidewaysText?: boolean;
        blankfontSize: number;
        titleFontSize: number;
        titleProcessor?: (title: string, n: number) => string;
        height: number;
        widthHandler: (
            itemNumber: number,
            unboundedChapterWidth: boolean
        ) => number;
        wikiLink: (name: string, n: number) => string;
        offsets?: K extends keyof Offsets ? Offsets[K] : undefined;
        focusable?: boolean;
    };
}[TimelineInfoType];

export type TimelineInfoItem = { type: 'timeline' } | TimelineInfoMap;

export const TIMELINE_INFO: TimelineInfoItem[] = [
    {
        type: 'arc',
        height: ARC_HEIGHT,
        covers: ARC_IMAGES,
        titles: ARC_NAMES,
        sidewaysText: true,
        titleProcessor: title => `${title} Arc`,
        blankfontSize: 100,
        titleFontSize: 100,
        widthHandler: getArcWidth,
        wikiLink: arcName => `https://berserk.fandom.com/wiki/${arcName}`,
        offsets: ARC_OFFSETS,
    },
    {
        type: 'timeline',
    },
    {
        type: 'chapter',
        height: CHAPTER_HEIGHT,
        covers: CHAPTER_PICTURES_FLAT,
        fit: 'contain',
        backgroundColor: 'white',
        titles: CHAPTER_NAMES,
        titleProcessor: title => title,
        blankfontSize: 45,
        titleFontSize: 45,
        widthHandler: getChapterWidth,
        wikiLink: s => `https://berserk.fandom.com/wiki/Episode_${s}_(Manga)`,
        focusable: true,
    },
    {
        type: 'volume',
        height: VOLUME_HEIGHT,
        covers: VOLUME_COVERS,
        titles: VOLUME_TITLES,
        titleProcessor: title => title,
        blankfontSize: 500,
        titleFontSize: 100,
        widthHandler: getVolumeWidth,
        wikiLink: (_, n) =>
            `https://berserk.fandom.com/wiki/Releases_(Manga)#vol${n}`,
    },
];

export const FLOATING_BUTTONS: {
    filename: string;
    title: string;
    option: keyof SettingsValues;
}[] = [
    { filename: 'something2', title: 'Read info', option: 'infoBoxOpen' },

    {
        filename: 'something3',
        title: 'Toggle unbounded chapter width',
        option: 'unboundedChapterWidth',
    },
    ...(!isMobileDevice() // include cross-lines button only on desktop
        ? [
              {
                  filename: 'something6',
                  title: 'Toggle cross-lines',
                  option: 'showCrosslines',
              } as const,
          ]
        : []),
    {
        filename: 'something4',
        title: 'Open chapter calendar',
        option: 'calendarOpen',
    },
    {
        filename: 'something5',
        title: 'Toggle always show titles',
        option: 'showTitles',
    },
];
